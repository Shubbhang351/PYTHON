package Algoes;

import java.util.*;

class Generate_Sorted_arrays {
    public static void solve(int i, int j, String ans, int[] a, int[] b, int arr) {
        for (int k = i; k < a.length; k++) {
            solve2(k + 1, j, ans + a[k], a, b, 1);
        }
    }

    public static void solve2(int i, int j, String ans, int a[], int b[], int arr) {

        if (arr == 0 && i == a.length) {

            return;
        }
        if (arr == 1 && j == b.length) {
            return;
        }

        if (arr == 1) {

            for (int k = j; k < b.length; k++) {
                if (a[i - 1] < b[k]) {
                    System.out.println(ans + " " + b[k]);
                    solve2(i, k + 1, ans + " " + b[k], a, b, 0);
                }
            }

        } else {
            for (int l = i; l < a.length; l++) {
                if (b[j - 1] < a[l]) {
                    solve2(l + 1, j, ans + " " + a[l], a, b, 1);
                }
            }
        }
    }

    public static void main(String[] args) {


        int a[] = {1,3,5,7};
        int b[] = {2,4,6,8,10,12};
        // Scanner sc = new Scanner(System.in);
        // int n = sc.nextInt();
        // int m = sc.nextInt();
        // int a[] = new int[n];
        // int b[] = new int[m];
        // for(int i = 0;i < n;i++){
        //     a[i] = sc.nextInt();
        // }
        // for(int i = 0;i < m;i++){
        //     b[i] = sc.nextInt();
        // }
        solve(0, 0, "", a, b, 0);
    }
}



// Given two sorted arrays A and B, generate all possible arrays such that first element is taken from A then from B then from A and so on in increasing order till the arrays exhausted. The generated arrays should end with an element from B.

// Input Format
// The First Line contains Two Integer N and M, as the size of both the Arrays. Next Line contains N Integers separated by space as Array A[]. Next Line contains M Integers separated by space as Array B[].

// Constraints
// Arrays A[] and B[] are Sorted.

// Output Format
// Display the Sorted Arrays generated separated by a new Line.

// Sample Input
// 3 4
// 10 15 25
// 1 5 20 30

// Sample Output
// 10 20
// 10 20 25 30
// 10 30
// 15 20
// 15 20 25 30
// 15 30
// 25 30

// Explanation
// For the Given Sample output test case 10 20 can be generated by choosing 10 from the A[] and 20 from the B[].
